For Route ADD system:
------------------------------------------------------------
 Laravel 10 :
------------------------------------------------
App/Provider/RouteServiceProvider

RouteServiceProvider.php
-----------------------------------------------------

 public function boot(): void
    {
        $this->configureRateLimiting();

        $this->routes(function () {
            Route::middleware('api')
                ->prefix('api')
                ->group(base_path('routes/api.php'));

            Route::middleware('web')
                ->group(base_path('routes/web.php'));

            Route::middleware('web')
                ->group(base_path('routes/backend.php'));
                
            Route::middleware('web')
                ->group(base_path('routes/frontend.php'));

               /*  Route::middleware(['web', 'role:admin'])
                ->group(base_path('routes/backend.php')); */
        });
    }



------------------------------------------------------------
 Laravel 11 :
-----------------------------------------------------------
##  bootstrap->app.php
.......................................................................
app.php

return Application::configure(basePath: dirname(__DIR__))
    ->withRouting(
        web: __DIR__ . '/../routes/web.php',
        commands: __DIR__ . '/../routes/console.php',
        health: '/up',
        then: function () {
            // Admin routes
            Route::middleware(['web', 'auth', 'owner'])
                ->prefix('owner')
                ->group(base_path('routes/owner.php'));

            // Admin routes
            Route::middleware(['web', 'auth', 'admin'])
                ->prefix('admin')
                ->group(base_path('routes/backend.php'));

            Route::middleware(['web', 'auth', 'admin'])
                ->prefix('admin/settings')
                ->group(base_path('routes/settings.php'));

        },
    )
    ->withMiddleware(function (Middleware $middleware) {
        $middleware->alias([
            'admin' => AdminMiddleware::class,
            'owner' => OwnerMiddleware::class,
            'user' => UserMiddleware::class,
        ]);
    })
    ->withMiddleware(function (Middleware $middleware) {
        $middleware->web([
            LanguageHandleMiddleware::class,
        ]);
    })
    ->withExceptions(function (Exceptions $exceptions) {
        //
    })->create();































