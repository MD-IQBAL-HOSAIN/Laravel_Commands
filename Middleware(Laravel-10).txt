#####################################
	For middleware laravel 10:
	#######################################
	**step-1: php artisan make:middleware AdminMiddleware
........................................................................................
**step-2:

<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Symfony\Component\HttpFoundation\Response;

class AdminMiddleware
{
    /**
     * Handle an incoming request.
     *
     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next
     */
    public function handle(Request $request, Closure $next): Response
    {
        if (auth()->check() && auth()->user()->role === 'admin') {
            return $next($request);
        }

        abort(403, 'Unauthorized action.');
    }
}

........................................................................................
**step-3:kernal.php

protected $middlewareAliases = [
        'auth' => \App\Http\Middleware\Authenticate::class,
        'auth.basic' => \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,
        'auth.session' => \Illuminate\Session\Middleware\AuthenticateSession::class,
        'cache.headers' => \Illuminate\Http\Middleware\SetCacheHeaders::class,
        'can' => \Illuminate\Auth\Middleware\Authorize::class,
        'guest' => \App\Http\Middleware\RedirectIfAuthenticated::class,
        'password.confirm' => \Illuminate\Auth\Middleware\RequirePassword::class,
        'signed' => \App\Http\Middleware\ValidateSignature::class,
        'throttle' => \Illuminate\Routing\Middleware\ThrottleRequests::class,
        'verified' => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class,

        // Custom Middleware Aliases
	//this is my custom authentication
        'admin' => \App\Http\Middleware\AdminMiddleware::class,
        'user'  => \App\Http\Middleware\UserMiddleware::class,
    ];

step-4: 
controllers/Auth
AuthenticatedSessionController.php
:
public function store(LoginRequest $request): RedirectResponse
    {
        // dd($request->all());
        $request->authenticate();

    $request->session()->regenerate();
    if (Auth::user()->role === 'user') {
        Auth::logout(); 
        return redirect()->intended(RouteServiceProvider::HOME);
    }

    // Custom role-based redirect
    if (Auth::user()->role === 'admin') {
        return redirect()->intended(RouteServiceProvider::ADMINHOME);
    }
    
       
    }

step-5: 
App/Provider?RouteserviceProvider:
RouteServiceProvider.php
:
class RouteServiceProvider extends ServiceProvider
{
    /**
     * The path to the "home" route for your application.
     *
     * Typically, users are redirected here after authentication.
     *
     * @var string
     */
    public const HOME = '/';
    public const ADMINHOME = '/admindashboard';

    /**
     * Define your route model bindings, pattern filters, and other route configuration.
     */
    public function boot(): void
    {
        $this->configureRateLimiting();

        $this->routes(function () {
            Route::middleware('api')
                ->prefix('api')
                ->group(base_path('routes/api.php'));

            Route::middleware('web')
                ->group(base_path('routes/web.php'));
        });
    }





